// Time Complexity :O(n)
// Space Complexity :O(n)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :no


// Your code here along with comments explaining your approach:

class Solution {
    public boolean isValid(String s) {
        Stack<Character> st = new Stack<>();//to process string characters
        int n = s.length();
        for (int i = 0; i < n; i++) {
            Character ch = s.charAt(i);
            if (ch == '(') {
                st.push(')');
            } else if (ch == '{') {
                st.push('}');
            } else if (ch == '[') {
                st.push(']');
            } else {
                if (st.isEmpty() || ch != st.peek()) {
                    return false;
                } else {
                    st.pop();
                }
            }
        }
        return st.isEmpty();
    }
}